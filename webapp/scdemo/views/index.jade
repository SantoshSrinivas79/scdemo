extends layout

block content
  
  
  div(id="desc")
    h1= title
    p Select a category then use the polygon icon below to draw a polygon on the map! Double click when you have selected the last point. Businesses matching the selected category will be displayed within your polygon.
    select
      option(value="restaurant", id="category") restaurant

  div(id="map")

  script.
    L.mapbox.accessToken = 'pk.eyJ1IjoibHlvbndqIiwiYSI6IndwUXlLUjQifQ.DIiytYUASOcXjKdpXW8S-Q';
    var map = L.mapbox.map('map', 'lyonwj.j5m52ga3')
    .setView([33.47870401153533, -112.0305061340332], 14);

    var featureGroup = L.featureGroup().addTo(map);

    var drawControl = new L.Control.Draw({
      edit: {
        featureGroup: featureGroup
      },
      draw: {
        polygon: true,
        polyline: false,
        rectangle: false,
        circle: false,
        marker: false
      }
    }).addTo(map);

    map.on('draw:created', showPolygonMarkers);
    map.on('draw:edited', showPolygonMarkersEdited);
    //map.on('draw:deleted', )

    function showPolygonMarkersEdited(e) {
      e.layers.eachLayer(function(layer) {
        showPolygonMarkers({ layer: layer });
      });
    }
    function showPolygonMarkers(e) {
      console.log(e);
      console.log($("#category").val());
      featureGroup.clearLayers();
      featureGroup.addLayer(e.layer);
  
      coords = e.layer['_latlngs']
      first = coords[0]['lat'] + " " + coords[0]['lng']+", "

      wkt = "POLYGON (("
      coords.forEach(getCoords)
      wkt = wkt + first.substring(0, first.length-2) + "))"
      console.log(wkt)

      url = "http://192.241.222.136:7474/scdemo/scdemo/intersects"
      data = {polygon: wkt}
      success = function(data){
        console.log(data)
      }

      var dataLayer = L.mapbox.featureLayer().addTo(map);

      function dataToMarkers(data) {
        data = JSON.parse(data)       
        var geojson = { type: 'FeatureCollection', features: [] };
        
        for (var i = 0; i < data.length; i++) {
        
        if (data[i].lon === null || data[i].lat === null) continue;
        geojson.features.push({
          type: 'Feature',
            geometry: {
              type: 'Point',
              coordinates: [ data[i].lon, data[i].lat]
            },
          properties: {
        'marker-size': "large",
        'marker-color': "#c091e6",
        'title': data[i].name
        }
        });
      }
      dataLayer.setGeoJSON(geojson);
      }

      $.ajax({
        url: url,
        data: data,
        success: dataToMarkers
        //dataType: dataType
      });




    }

    function getCoords(e) {
      group = e['lat'] + " " + e['lng']+", "
      console.log(group)
      wkt = wkt + group
    }



